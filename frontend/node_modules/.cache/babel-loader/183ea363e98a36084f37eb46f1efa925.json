{"ast":null,"code":"import _slicedToArray from\"/opt/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./Receta.css\";import{Card}from'react-bootstrap';import{Link}from\"react-router-dom\";import{useState}from\"react\";import MydModalWithGrid from'../ModalRecipe/ModalRecipe.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Receta(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),Recetas=_useState2[0],setReceta=_useState2[1];/* useEffect(()=>{\n          fetch(`./json/id/${props.id}.json`)\n          .then((response)=>response.json())\n          .then((data)=>setReceta(data));\n      },[]);\n      */ /* if (props.ingredients) {\n         console.log(Receta);+\n      } */useEffect(function(){fetch(\"\".concat(configData.SERVER_URL,\"/recetas\"),{method:'GET',headers:new Headers({'Content-type':'application/json'}),mode:'no-cors'}).then(function(response){return response.json();}).then(function(data){return setReceta(data);});},[]);if(!Recetas)return null;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showModal=_useState4[0],setShow=_useState4[1];var handleClose=function handleClose(){return setShow(false);};var handleShow=function handleShow(){return setShow(true);};{Recetas.map(function(Receta){return/*#__PURE__*/_jsxs(Card,{style:{width:'12rem'},className:\"Card sm-2\",children:[/*#__PURE__*/_jsxs(Link,{to:\"#\",onClick:handleShow,className:\"Cardlink\",children:[/*#__PURE__*/_jsx(Card.Img,{className:\"CardImage\",variant:\"top\",src:Receta.image}),/*#__PURE__*/_jsx(Card.Body,{className:\"CardBody\",children:/*#__PURE__*/_jsx(Card.Subtitle,{className:\"CardSubtitle mb-2 text-muted\",children:Receta.name})})]}),/*#__PURE__*/_jsx(MydModalWithGrid,{id:Receta._id.$oid,show:showModal,onHide:handleClose})]});});}}export default Receta;","map":{"version":3,"sources":["/opt/frontend/src/components/Receta/Receta.js"],"names":["Card","Link","useState","MydModalWithGrid","Receta","Recetas","setReceta","useEffect","fetch","configData","SERVER_URL","method","headers","Headers","mode","then","response","json","data","showModal","setShow","handleClose","handleShow","map","width","image","name","_id","$oid"],"mappings":"oIAAA,MAAO,cAAP,CACA,OAAQA,IAAR,KAAmB,iBAAnB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAAQC,QAAR,KAAwB,OAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+BAA7B,C,wFAGA,QAASC,CAAAA,MAAT,EAAiB,CACb,cAA6BF,QAAQ,CAAC,EAAD,CAArC,wCAAOG,OAAP,eAAgBC,SAAhB,eACE;AACN;AACA;AACA;AACA;AACA,QAPiB,CAQX;AACN;AACA,UACMC,SAAS,CAAC,UAAI,CACZC,KAAK,WAAIC,UAAU,CAACC,UAAf,aAAqC,CACxCC,MAAM,CAAE,KADgC,CAExCC,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAY,CAAE,eAAgB,kBAAlB,CAAZ,CAF+B,CAGxCC,IAAI,CAAE,SAHkC,CAArC,CAAL,CAKCC,IALD,CAKM,SAACC,QAAD,QAAYA,CAAAA,QAAQ,CAACC,IAAT,EAAZ,EALN,EAMCF,IAND,CAMM,SAACG,IAAD,QAAQZ,CAAAA,SAAS,CAACY,IAAD,CAAjB,EANN,EAOH,CARU,CAQT,EARS,CAAT,CASF,GAAI,CAACb,OAAL,CAAc,MAAO,KAAP,CACd,eAA6BH,QAAQ,CAAC,KAAD,CAArC,yCAAOiB,SAAP,eAAkBC,OAAlB,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMD,CAAAA,OAAO,CAAC,KAAD,CAAb,EAApB,CACA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMF,CAAAA,OAAO,CAAC,IAAD,CAAb,EAAnB,CACA,CAACf,OAAO,CAACkB,GAAR,CAAY,SAACnB,MAAD,CAAY,CACzB,mBACI,MAAC,IAAD,EAAM,KAAK,CAAE,CAACoB,KAAK,CAAC,OAAP,CAAb,CAA8B,SAAS,CAAC,WAAxC,wBACA,MAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,OAAO,CAAEF,UAAtB,CAAkC,SAAS,CAAC,UAA5C,wBACA,KAAC,IAAD,CAAM,GAAN,EAAU,SAAS,CAAC,WAApB,CAA+B,OAAO,CAAC,KAAvC,CAA6C,GAAG,CAAElB,MAAM,CAACqB,KAAzD,EADA,cAEA,KAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,UAArB,uBACI,KAAC,IAAD,CAAM,QAAN,EAAe,SAAS,CAAC,8BAAzB,UAAyDrB,MAAM,CAACsB,IAAhE,EADJ,EAFA,GADA,cAOA,KAAC,gBAAD,EAAkB,EAAE,CAAEtB,MAAM,CAACuB,GAAP,CAAWC,IAAjC,CAAuC,IAAI,CAAET,SAA7C,CAAwD,MAAM,CAAEE,WAAhE,EAPA,GADJ,CAWC,CAZA,EAYE,CACN,CAED,cAAejB,CAAAA,MAAf","sourcesContent":["import \"./Receta.css\";\nimport {Card} from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport {useState } from \"react\";\nimport MydModalWithGrid from '../ModalRecipe/ModalRecipe.js'\n\n\nfunction Receta(){    \n    const [Recetas, setReceta] = useState([]);\n      /* useEffect(()=>{\n          fetch(`./json/id/${props.id}.json`)\n          .then((response)=>response.json())\n          .then((data)=>setReceta(data));\n      },[]);\n      */\n      /* if (props.ingredients) {\n         console.log(Receta);+\n      } */\n      useEffect(()=>{\n        fetch(`${configData.SERVER_URL}/recetas`, {\n          method: 'GET',\n          headers: new Headers({ 'Content-type': 'application/json'}),\n          mode: 'no-cors'\n  })\n        .then((response)=>response.json())\n        .then((data)=>setReceta(data));\n    },[]);\n    if (!Recetas) return null;\n    const [showModal, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    {Recetas.map((Receta) => {\n    return(\n        <Card style={{width:'12rem'}} className=\"Card sm-2\">\n        <Link to=\"#\" onClick={handleShow} className=\"Cardlink\" >\n        <Card.Img className=\"CardImage\"variant=\"top\" src={Receta.image} />\n        <Card.Body className=\"CardBody\">\n            <Card.Subtitle className=\"CardSubtitle mb-2 text-muted\">{Receta.name}</Card.Subtitle> \n        </Card.Body>\n        </Link>\n        <MydModalWithGrid id={Receta._id.$oid} show={showModal} onHide={handleClose} />\n    </Card>\n    );\n    })}\n}\n\nexport default Receta;"]},"metadata":{},"sourceType":"module"}